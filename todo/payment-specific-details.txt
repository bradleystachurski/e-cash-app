# Payment-Specific Details Enhancement

## Context
Enhancing TransactionDetailModal to show payment-type-specific information for Lightning, on-chain, and e-cash transactions.

This is item #1 from the main project todo.txt: "Add payment-specific details to transaction modal"

## Current State
- Basic TransactionDetailModal exists in lib/widgets/transaction_detail_modal.dart
- Shows common info: amount, type, timestamp, operation ID
- Integrated with existing design system (showCarbineModalBottomSheet)
- Transaction rows are clickable and show modal

## NOW
- Ready to begin analyzing current data structure and planning implementation

## TODO
1. Analyze current transaction data structure from Rust backend
2. Identify what additional data is available for each payment type:
   - Lightning: payment hash, invoice, gateway info
   - On-chain: transaction hash, block height, confirmations  
   - E-cash: token info, notes count
3. Update Rust FFI interface if needed to expose additional data
4. Modify Flutter transaction models to include new fields
5. Update TransactionDetailModal UI to display payment-specific details
6. Test each payment type's enhanced modal display
7. Run linting and formatting checks

## DONE
âœ… Created task-specific todo file and directory structure

## Technical Notes
- Current transaction model: {received, amount, module, timestamp, operationId}
- Transaction types: 'ln'/'lnv2' (Lightning), 'wallet' (On-chain), 'mint' (E-cash)
- Files to modify: lib/widgets/transaction_detail_modal.dart, potentially lib/multimint.dart
- May need Rust backend changes in rust/carbine_fedimint/ if additional data needed